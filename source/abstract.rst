.. include:: conf.rst

.. _ch-abstract:

Abstract
========

In this dissertation, new algorithms for decision tree (DT) induction are presented, and various possibilities for their implementation are explored. First, the description is given for the novel |algo| (Evolutionary Full Tree Induction) algorithm, which was designed in such a way that its implementations can utilize as little hardware resources as possible for the induction, as well as to induce as small decision trees as possible. This enables the |algo| algorithm to be utilized in embedded applications, where the optimal resource utilization is of paramount importance when this algorithm is utilized within an embedded application. The implementation of the |algo| algorithm for the PC platform is then compared with the PC implementations of the several other existing DT induction algorithms in terms of size and accuracy of the induced DTs and the times of execution. The experiments show that the proposed |algo| algorithm is able to infer much smaller DTs on average, without the significant loss in accuracy when compared to the top-down incremental DT inducers. On the other hand, when compared to other full tree induction algorithms, it was able to produce more accurate DTs, with similar sizes, in shorter times. Next, the possibility of the hardware acceleration of the |algo| algorithm is explored and the results of the algorithm profiling are discussed. Based on the profiling results, the hardware co-processor |cop| (Evolutionary Full Tree Induction co-Processor) is proposed and its architecture is described. Then, the hardware-software (HW/SW) co-design implementation of the |algo| algorithm is given, relying on the |cop| co-processor to perform the most computationally intensive part of the evolutionary DT induction, namely the DT accuracy evaluation. Finally, the benefits of using the |cop| co-processor, in terms of the DT induction speed, are discussed in the experimental section, where several |algo| algorithm implementations have been compared on the execution times. After, the algorithm for the induction of the DT ensembles, named |ealgo| (Ensembles Evolutionary Full Tree Induction) is described. First, the benefits of building an ensemble of DTs is discussed using the results of experiments comparing the accuracy of the DT ensembles with the accuracy of the single DTs. Next, the profiling results are presented that reveal the time complexity bottleneck of the |ealgo| algorithm and the |ecop| (DT Ensemble Evolution co-Processor) co-processor is proposed for hardware acceleration of the algorithm. Again, the hardware-software (HW/SW) co-design implementation of the |ealgo| algorithm is described and the results of the experiments comparing the execution speeds of the different |ealgo| algorithm implementations are given.
